Принципы SOLID и их применение:
1. Single Responsibility Principle (SRP): Каждый класс должен иметь одну ответственность.
2. Open/Closed Principle (OCP): Классы должны быть открыты для расширения, но закрыты для
модификации.
3. Liskov Substitution Principle (LSP): Объекты должны быть заменяемы их подтипами без
изменения правильности программы.
4. Interface Segregation Principle (ISP): Клиенты не должны зависеть от интерфейсов,
которые они не используют.
5. Dependency Inversion Principle (DIP): Зависимости должны быть инвертированы,
т.е. модули высшего уровня не должны зависеть от модулей низшего уровня, а
обе группы должны зависеть от абстракций.

Протокол действий при выполнении ДЗ и комментарии:

1-й принцип:

Class User - этот класс имеет одну

2-й принцип:

Class User - этот класс открыт для расширения, но закрыт для модификации.

3-й принцип:

4-й принцип:

Interface UserController --> Interface UserController - изменено название интерфейса, применен
принцип разделения интерфейсов.

Interface UserView - применен принцип разделения интерфейсов.

5-й принцип:

